#!/bin/bash
## This Script will build Arch Linux

#################### START OF SCRIPT ####################

#################### Section 1 ####################

sudo echo "Section 1 START"
sudo dd if=/dev/zero of=/dev/sda bs=512 count=1 conv=notrunc
sudo sleep 5s
sudo sed -i "s/#Color/Color/" /etc/pacman.conf && sudo sed -i '/^#VerbosePkgLists/a ILoveCandy' /etc/pacman.conf
sudo sed -i "s/Server/##Server/g" /etc/pacman.d/mirrorlist && sudo sed -i '/## Australia/{n;s/##Server/Server/}' /etc/pacman.d/mirrorlist
sudo sed -i '/## Generated on/a Server = https://mirror.aarnet.edu.au/pub/archlinux/$repo/os/$arch' /etc/pacman.d/mirrorlist
sudo sed -i '/## Generated on/a Server = https://archlinux.mirror.digitalpacific.com.au/$repo/os/$arch' /etc/pacman.d/mirrorlist
sudo sed -i '/## Generated on/a Server = https://syd.mirror.rackspace.com/archlinux/$repo/os/$arch' /etc/pacman.d/mirrorlist
sudo printf '\n' | sudo pacman -Syy expect
sudo sleep 5s
sudo pacman -Syyy
sudo sleep 5s
sudo echo "Section 1 END"

#################### Section 2 ####################

sudo echo "Section 2 START"
sudo echo "label: gpt" > partition-table
sudo echo "device: /dev/sda" >> partition-table
sudo echo "unit: sectors" >> partition-table
sudo echo "first-lba: 2048" >> partition-table
sudo echo "last-lba: 1000215182" >> partition-table
sudo echo " " >> partition-table
sudo echo "/dev/sda1 : start=           2048, size=   1048576, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B" >> partition-table
sudo echo "/dev/sda2 : start=        1050624, size=   1048576, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4" >> partition-table
sudo echo "/dev/sda3 : start=      2099200, size=   998115983, type=E6D6D379-F507-44C2-A23C-238F2A3DF928" >> partition-table
sudo sleep 5s
sudo sfdisk /dev/sda < partition-table
sudo rm partition-table
sudo sleep 5s
sudo echo "Section 2 END"

#################### Section 3 ####################

sudo echo "Section 3 START"
sudo mkfs.fat -F32 /dev/sda1
sudo sleep 10s
sudo printf 'y\n' | mkfs.ext4 /dev/sda2
sudo sleep 10s
sudo echo "#!/usr/bin/expect -f" > expectfile
sudo echo "set send_slow {2 0.5}" >> expectfile
sudo echo "spawn cryptsetup luksFormat /dev/sda3" >> expectfile
sudo echo "expect \"Are you sure? (Type 'yes' in capital letters):\\r\"" >> expectfile
sudo echo "send -s \"YES\\r\"" >> expectfile
sudo echo "expect \"Enter passphrase for /dev/sda3:\\r\"" >> expectfile
sudo echo "send -s \"1234567890\\r\"" >> expectfile
sudo echo "expect \"Verify passphrase:\\r\"" >> expectfile
sudo echo "send -s \"1234567890\\r\"" >> expectfile
sudo echo "interact" >> expectfile
sudo sleep 10s
sudo chmod 777 expectfile
sudo sleep 10s
sudo expect expectfile
sudo sleep 20s
sudo rm expectfile
sudo echo "Section 3 END"

#################### Section 4 ####################

sudo echo "Section 4 START"
sudo printf '1234567890\n' | cryptsetup open --type luks /dev/sda3 LVM
sudo sleep 5s
sudo pvcreate --dataalignment 1m /dev/mapper/LVM
sudo sleep 5s
sudo vgcreate volgroup0 /dev/mapper/LVM
sudo sleep 5s
sudo lvcreate -L 50GB volgroup0 -n LVM_root
sudo sleep 5s
## sudo lvcreate -L 350GB volgroup0 -n LVM_home
sudo lvcreate -l 100%FREE volgroup0 -n LVM_home
sudo sleep 5s
sudo echo "Section 4 END"

#################### Section 5 ####################

sudo echo "Section 5 START"
sudo mkfs.ext4 /dev/volgroup0/LVM_root
sudo sleep 5s
sudo mkfs.ext4 /dev/volgroup0/LVM_home
sudo sleep 5s
sudo mount /dev/volgroup0/LVM_root /mnt
sudo sleep 5s
sudo mkdir /mnt/home
sudo mount /dev/volgroup0/LVM_home /mnt/home
sudo sleep 5s
sudo mkdir /mnt/boot
sudo mount /dev/sda2 /mnt/boot
sudo sleep 5s
sudo mkdir /mnt/etc
sudo sleep 5s
sudo genfstab -U -p /mnt >> /mnt/etc/fstab
sudo echo "Section 5 END"

#################### Section 6 ####################

sudo echo "Section 6 START"
sudo sleep 5s
sudo cat /mnt/etc/fstab
sudo sleep 5s
sudo printf '\n' | pacstrap -i /mnt base
sudo echo "Pacstrap Completed"
sudo sleep 5s
sudo echo "Section 6 END"

#################### Section 7 ####################

##TEST START
sudo echo "#!/usr/bin/expect -f" > expectfile1
sudo echo "set send_slow {2 0.5}" >> expectfile1
sudo echo "spawn arch-chroot /mnt" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | pacman -S linux linux-headers\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | pacman -S nano vim\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | pacman -S base-devel openssh\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | pacman -S networkmanager wpa_supplicant wireless_tools netctl\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | systemctl enable sshd\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | systemctl enable NetworkManager\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"printf '\n\n\n' | pacman -S lvm2\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"sleep 5s\\r\" >> expectfile1
sudo echo "expect \"\\r\"" >> expectfile1
sudo echo "send -s \"exit\\r\" >> expectfile1
sudo echo "interact" >> expectfile1
sudo sleep 10s
sudo chmod 777 expectfile1
sudo sleep 10s
sudo expect expectfile1
sudo rm expectfile1
sudo sleep 20s
##TEST END

sudo echo "Section 7 START"
sudo printf 'pacman -Syyy linux linux-headers \n\n\nexit\n' | sudo arch-chroot /mnt
sudo sleep 5s
sudo echo "Installed Linux and Linux Headers"
sudo printf 'sudo pacman -Syyy nano vim vi\n\n\nexit\n' | sudo arch-chroot /mnt
sudo sleep 5s
sudo echo "Installed Text Editors"
sudo printf 'sudo pacman -Syyy base-devel openssh\n\n\nexit\n' | sudo arch-chrrot /mnt
sudo sleep 5s
sudo echo "Installed Developers Base and SSH"
sudo printf 'sudo pacman -Syyy networkmanager wpa_supplicant wireless_tools netctl\n\n\nexit\n' | sudo arch-chroot /mnt
sudo sleep 5s
sudo echo "Installed Networking Packages"
sudo sleep 5s
sudo printf 'sudo systemctl enable sshd\nexit\n' | sudo arch-chroot /mnt
sudo printf 'sudo systemctl enable NetworkManager\nexit\n' | sudo arch-chroot /mnt
sudo printf 'sudo pacman -Syyy lvm2\n\n\nexit\n' | sudo arch-chroot /mnt
sudo echo "Installed LVM2 package"
sudo sleep 5s
sudo echo "Section 7 END"

#################### Section 8 ####################

sudo echo "Section 8 START"
sudo sed -i 'HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)/block/block encrypt lvm2' /etc/mkinitcpio.conf
sudo mkinitcpio -p linux
sudo sleep 5s
sudo sed -i "s/#en_AU.UTF-8/en_AU.UTF-8/" /etc/locale.gen && sudo sed -i "s/en_US.UTF-8/#en_US.UTF-8/" /etc/locale.gen
sudo locale-gen
# sudo passwd
# sudo useradd -m -g users USERNAME
# sudo passwd USERNAME
# create a group for admins???
sudo echo "Section 8 END"

#################### Section 9 ####################

sudo echo "Section 9 START"
sudo printf 'sudo pacman -S grub efibootmgr dosfstools os-prober mtools\n\n\nexit\n' | sudo arch-chroot /mnt
sudo sed -i "s/#GRUB_ENABLE_CRYPTODISK=y/GRUB_ENABLE_CRYPTODISK=y/" /etc/default/grub
sudo sed -i 'GRUB_CMDLINE_LINUX_DEFAULT='loglevel=3 quiet/quiet/cryptdevice=/dev/sda3:volgroup0:allow-discards quiet' /etc/default/grub
sudo mkdir /boot/EFI
sudo mount /dev/sda1 /boot/EFI
sudo grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
sudo mkdir /boot/grub/locale
sudo cp /usr/share/locale/en@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo fallocate -l 2G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo cp /etc/fstab /etc/fstab.bak
sudo echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab
sudo echo "Section 9 END"

#################### Section 10 ####################

sudo echo "Section 10 START"
sudo printf 'sudo pacman -S intel-ucode\n\n\nexit\n' | sudo arch-chroot /mnt
sudo printf 'sudo pacman -S xorg-server\n\n\nexit\n' | sudo arch-chroot /mnt
sudo printf 'sudo pacman -S mesa\n\n\nexit\n' | sudo arch-chroot /mnt
sudo umount -a
sudo poweroff
sudo echo "Section 10 END"

#################### END OF SCRIPT ####################
