#!/bin/bash
## This Script will build Arch Linux

#################### START OF SCRIPT ####################

#################### Section 1 ####################

sudo echo "Section 1 START"
sudo dd if=/dev/zero of=/dev/sda bs=512 count=1 conv=notrunc
sudo sleep 2s
sudo sed -i "s/#Color/Color/" /etc/pacman.conf && sudo sed -i '/^#VerbosePkgLists/a ILoveCandy' /etc/pacman.conf
sudo sed -i "s/Server/##Server/g" /etc/pacman.d/mirrorlist && sudo sed -i '/## Australia/{n;s/##Server/Server/}' /etc/pacman.d/mirrorlist
sudo sed -i '/## Generated on/a Server = https://mirror.aarnet.edu.au/pub/archlinux/$repo/os/$arch' /etc/pacman.d/mirrorlist
sudo sed -i '/## Generated on/a Server = https://archlinux.mirror.digitalpacific.com.au/$repo/os/$arch' /etc/pacman.d/mirrorlist
sudo sed -i '/## Generated on/a Server = https://syd.mirror.rackspace.com/archlinux/$repo/os/$arch' /etc/pacman.d/mirrorlist
sudo printf '\n' | sudo pacman -Syy expect
sudo sleep 2s
sudo pacman -Syyy
sudo sleep 2s
sudo echo "Section 1 END"

#################### Section 2 ####################

sudo echo "Section 2 START"
sudo echo "label: gpt" > partition-table
sudo echo "device: /dev/sda" >> partition-table
sudo echo "unit: sectors" >> partition-table
sudo echo "first-lba: 2048" >> partition-table
sudo echo "last-lba: 1000215182" >> partition-table
sudo echo " " >> partition-table
sudo echo "/dev/sda1 : start=           2048, size=   1048576, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B" >> partition-table
sudo echo "/dev/sda2 : start=        1050624, size=   1048576, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4" >> partition-table
sudo echo "/dev/sda3 : start=      2099200, size=   998115983, type=E6D6D379-F507-44C2-A23C-238F2A3DF928" >> partition-table
sudo sleep 2s
sudo sfdisk /dev/sda < partition-table
sudo rm partition-table
sudo echo "Section 2 END" && sleep 5s

#################### Section 3 ####################

sudo echo "Section 3 START"
sudo mkfs.fat -F32 /dev/sda1
sudo sleep 5s
sudo printf 'y\n' | mkfs.ext4 /dev/sda2
sudo sleep 5s
sudo echo "#!/usr/bin/expect -f" > expectfile
sudo echo "set send_slow {2 0.5}" >> expectfile
sudo echo "spawn cryptsetup luksFormat /dev/sda3" >> expectfile
sudo echo "expect \"Are you sure? (Type 'yes' in capital letters):\\r\"" >> expectfile
sudo echo "send -s \"YES\\r\"" >> expectfile
sudo echo "expect \"Enter passphrase for /dev/sda3:\\r\"" >> expectfile
sudo echo "send -s \"1234567890\\r\"" >> expectfile
sudo echo "expect \"Verify passphrase:\\r\"" >> expectfile
sudo echo "send -s \"1234567890\\r\"" >> expectfile
sudo echo "interact" >> expectfile
sudo chmod 777 expectfile
sudo expect expectfile
sudo sleep 20s
sudo rm expectfile
sudo echo "Section 3 END" && sleep 5s

#################### Section 4 ####################

sudo echo "Section 4 START"
sudo printf '1234567890\n' | cryptsetup open --type luks /dev/sda3 LVM
sudo sleep 5s
sudo pvcreate --dataalignment 1m /dev/mapper/LVM
sudo sleep 2s
sudo vgcreate volgroup0 /dev/mapper/LVM
sudo sleep 2s
sudo lvcreate -L 50GB volgroup0 -n LVM_root
sudo sleep 2s
## sudo lvcreate -L 350GB volgroup0 -n LVM_home
sudo lvcreate -l 100%FREE volgroup0 -n LVM_home
sudo sleep 2s
sudo echo "Section 4 END" && sleep 5s

#################### Section 5 ####################

sudo echo "Section 5 START"
sudo mkfs.ext4 /dev/volgroup0/LVM_root
sudo sleep 2s
sudo mkfs.ext4 /dev/volgroup0/LVM_home
sudo sleep 2s
sudo mount /dev/volgroup0/LVM_root /mnt
sudo sleep 2s
sudo mkdir /mnt/home
sudo mount /dev/volgroup0/LVM_home /mnt/home
sudo sleep 2s
sudo mkdir /mnt/boot
sudo mount /dev/sda2 /mnt/boot
sudo sleep 2s
sudo mkdir /mnt/etc
sudo sleep 2s
sudo genfstab -U -p /mnt >> /mnt/etc/fstab
sudo echo "Section 5 END" && sleep 5s

#################### Section 6 ####################

sudo echo "Section 6 START"
sudo cat /mnt/etc/fstab
sudo sleep 2s
sudo printf '\n' | pacstrap -i /mnt base
sudo echo "Pacstrap Completed"
sudo echo "Section 6 END" && sleep 5s

#################### Section 7 ####################

sudo echo "Section 7 START"

##TEST START

###note need to install firmware(isci;qed;qla1280;aic94xx;cxgb3;cxgb4;advansys;wd719x;csiostor;qla2xxx;bfa;ums_eneub6250;smsmdtv)
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' | pacman -S linux linux-headers
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' | pacman -S nano vim
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' | pacman -S base-devel openssh
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' | pacman -S networkmanager wpa_supplicant wireless_tools netctl
EOF
sudo arch-chroot /mnt /bin/sh << EOF
systemctl enable sshd
EOF
sudo arch-chroot /mnt /bin/sh << EOF
systemctl enable NetworkManager
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' | pacman -S lvm2
EOF
sudo arch-chroot /mnt /bin/sh << EOF
sed -i '/HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)/{s/block/block encrypt lvm2}' /etc/mkinitcpio.conf
EOF
sudo arch-chroot /mnt /bin/sh << EOF
mkinitcpio -p linux
EOF
sudo arch-chroot /mnt /bin/sh << EOF
sed -i "s/#en_AU.UTF-8/en_AU.UTF-8/" /etc/locale.gen && sed -i "s/en_US.UTF-8/#en_US.UTF-8/" /etc/locale.gen
EOF
sudo arch-chroot /mnt /bin/sh << EOF
locale-gen
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' |pacman -S grub efibootmgr dosfstools os-prober mtools
EOF
sudo arch-chroot /mnt /bin/sh << EOF
sed -i "s/#GRUB_ENABLE_CRYPTODISK=y/GRUB_ENABLE_CRYPTODISK=y/" /etc/default/grub
EOF
sudo arch-chroot /mnt /bin/sh << EOF
sed -i "/GRUB_CMDLINE_LINUX_DEFAULT=\"loglevel=3 quiet/{s/quiet/cryptdevice=\/dev\/sda3:volgroup0:allow-discards quiet/}' /etc/default/grub
EOF
sudo arch-chroot /mnt /bin/sh << EOF
mkdir /boot/EFI
EOF
sudo arch-chroot /mnt /bin/sh << EOF
mount /dev/sda1 /boot/EFI
EOF
sudo arch-chroot /mnt /bin/sh << EOF
grub-install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
EOF
sudo arch-chroot /mnt /bin/sh << EOF
mkdir /boot/grub/locale
EOF
sudo arch-chroot /mnt /bin/sh << EOF
cp /usr/share/locale/en@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
EOF
sudo arch-chroot /mnt /bin/sh << EOF
grub-mkconfig -o /boot/grub/grub.cfg
EOF
sudo arch-chroot /mnt /bin/sh << EOF
fallocate -l 2G /swapfile
EOF
sudo arch-chroot /mnt /bin/sh << EOF
chmod 600 /swapfile
EOF
sudo arch-chroot /mnt /bin/sh << EOF
mkswap /swapfile
EOF
sudo arch-chroot /mnt /bin/sh << EOF
cp /etc/fstab /etc/fstab.bak
EOF
sudo arch-chroot /mnt /bin/sh << EOF
echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' | pacman -S intel-ucode
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' |  pacman -S xorg xorg-server
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' |  pacman -S mesa
EOF
sudo arch-chroot /mnt /bin/sh << EOF
printf '\n\n\n' |  pacman -S gnome
EOF
sudo arch-chroot /mnt /bin/sh << EOF
systemctl start gdm.service
EOF
sudo arch-chroot /mnt /bin/sh << EOF
systemctl enable gdm.service
EOF
##sudo umount all
##sudo reboot
##TEST END

sudo echo "Section 7 END"

#################### Section 8 ####################

sudo echo "Section 8 START"
# sudo passwd
# sudo useradd -m -g users USERNAME
# sudo passwd USERNAME
# create a group for admins???
sudo echo "Section 8 END"

#################### Section 9 ####################

sudo echo "Section 9 START"

sudo echo "Section 9 END"

#################### Section 10 ####################

sudo echo "Section 10 START"

sudo umount -a
sudo poweroff
sudo echo "Section 10 END"

#################### END OF SCRIPT ####################
